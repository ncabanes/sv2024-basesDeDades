Es desitja crear un sistema informatitzat de control de "bugs" (fallades de programes informàtics). 
D'una banda, existeix una sèrie de programes que volem controlar. De tots ells ens interessa un nom i un codi alfanumèric. Els programes poden ser desenvolupaments realitzats per a clients o bé eines auxiliars pròpies. Els desenvolupaments per a clients tindran un número de versió (per exemple, 1.06) i una data prevista de llançament, i poden ser una evolució d'una altra versió anterior del mateix programa. Les eines pròpies tenen una data d'alliberament (per exemple, 20230318).
De cada programa, tant si és per a clients com per a la nostra pròpia empresa, volem anotar els possibles "bugs" que es vagen trobant. De cada bug s'anotarà un codi numèric, una descripció breu i una descripció detallada. Suposarem que cada bug és únic, en el sentit que cada bug pertanyerà a un únic programa, i dos bugs de característiques similars en programes diferents no es consideraran el mateix bug i es tractaran per separat, encara que es podrà anotar que es tracta de bugs que semblen estar relacionats entre si.
Cada bug podrà ser reportat només per un usuari registrat. Cada usuari registrat tindrà un codi, un nom, uns detalls de contacte (formats per un email i un o diversos telèfons mòbils) i una clau d'accés, que es guardarà encriptada. Per descomptat, el nom de l'usuari no haurà de ser nul.
Existeix un tipus especial d'usuaris registrats: els programadors de la nostra empresa. Per a cada programador, ens interessarà també la seua especialitat. Així, cada "bug" serà reportat per un usuari registrat (potser programador o potser no, en una certa data), pot ser revisat per un programador (en una altra data) i pot ser assignat a un altre programador (que el resoldrà en una altra data). 
Ens interessarà saber quins programadors han participat en un cert desenvolupament per a clients i quines eines han emprat en el procés. Per a un cert desenvolupament extern, un programador pot emprar diverses eines internes; una eina interna pot ser emprada per un programador en diversos programes de clients; una eina interna pot ser emprada per diversos programadors en cada desenvolupament extern.
El sistema també ha de permetre anotar comentaris als bugs. Cada comentari correspondrà a un únic bug i serà anotat per un únic usuari. Un bug pot tindre diversos comentaris, i un usuari pot escriure diferents comentaris. Cada comentari tindrà una descripció, i un número correlatiu com a clau (és a dir, el primer comentari per a cada bug tindrà el codi 1, el segon comentari per a cada bug tindrà el codi 2, i així successivament).
Se'ns ha indicat que, a més, existeixen diversos "estats" tipificats en els bugs: pendent de comprovació, assignat però sense resoldre, resolt, etc. Per a cada estat s'anotarà un codi i una des¬cripció. Cada bug, en un moment donat, s'haurà de trobar en un i només en un d'eixos estats.
---

Se desea crear un sistema informatizado de control de "bugs" (fallos de programas informáticos). 
Por una parte, existe una serie de programas que queremos controlar. De todos ellos nos interesa un nombre y un código alfanumérico. Los programas pueden ser desarrollos realizados para clientes o bien herramientas auxiliares propias. Los desarrollos para clientes tendrán un número de versión (por ejemplo, 1.06) y una fecha prevista de lanzamiento, y pueden ser una evolución de otra versión anterior del mismo programa. Las herramientas propias tienen una fecha de liberación (por ejemplo, 20230318).
De cada programa, tanto si es para clientes como para nuestra propia empresa, queremos anotar los posibles "bugs" que se vayan encontrando. De cada bug se anotará un código numérico, una descripción breve y una descripción detallada. Supondremos que cada bug es único, en el sentido de que cada bug pertenecerá a un único programa, y dos bugs de características similares en programas distintos no se considerarán el mismo bug y se tratarán por separado, aunque se podrá anotar que se trata de bugs que parecen estar relacionados entre sí.
Cada bug podrá ser reportado sólo por un usuario registrado. Cada usuario registrado tendrá un código, un nombre, unos detalles de contacto (formados por un email y uno o varios teléfonos móviles) y una clave de acceso, que se guardará encriptada. Por supuesto, el nombre del usuario no deberá ser nulo.
Existe un tipo especial de usuarios registrados: los programadores de nuestra empresa. Para cada programador, nos interesará también su especialidad. Así, cada "bug" será reportado por un usuario registrado (quizá programador o quizá no, en cierta fecha), puede ser revisado por un programador (en otra fecha) y puede ser asignado a otro programador (que lo resolverá en otra fecha). 
Nos interesará saber qué programadores han participado en un cierto desarrollo para clientes y qué herramientas han empleado en el proceso. Para un cierto desarrollo externo, un programador puede emplear varias herramientas internas; una herramienta interna puede ser empleada por un programador en varios programas de clientes; una herramienta interna puede ser empleada por varios programadores en cada desarrollo externo.
El sistema también debe permitir anotar comentarios a los bugs. Cada comentario corresponderá a un único bug y será anotado por un único usuario. Un bug puede tener varios comentarios, y un usuario puede escribir distintos comentarios. Cada comentario tendrá una descripción, y un número correlativo como clave (es decir, el primer comentario para cada bug tendrá el código 1, el segundo comentario para cada bug tendrá el código 2, y así sucesivamente).
Se nos ha indicado que, además, existen varios "estados" tipificados en los bugs: pendiente de comprobación, asignado pero sin resolver, resuelto, etc. Para cada estado se anotará un código y una descripción. Cada bug, en un momento dado, se deberá encontrar en uno y sólo en uno de esos estados.
